// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import accountpoolmetrics "github.com/Optum/dce/pkg/accountpoolmetrics"

import mock "github.com/stretchr/testify/mock"

// Servicer is an autogenerated mock type for the Servicer type
type Servicer struct {
	mock.Mock
}

// Get provides a mock function with given fields: ID
func (_m *Servicer) Get(ID string) (*accountpoolmetrics.AccountPoolMetrics, error) {
	ret := _m.Called(ID)

	var r0 *accountpoolmetrics.AccountPoolMetrics
	if rf, ok := ret.Get(0).(func(string) *accountpoolmetrics.AccountPoolMetrics); ok {
		r0 = rf(ID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*accountpoolmetrics.AccountPoolMetrics)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(ID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: data
func (_m *Servicer) Save(data *accountpoolmetrics.AccountPoolMetrics) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func(*accountpoolmetrics.AccountPoolMetrics) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: ID, data
func (_m *Servicer) Update(ID string, data *accountpoolmetrics.AccountPoolMetrics) (*accountpoolmetrics.AccountPoolMetrics, error) {
	ret := _m.Called(ID, data)

	var r0 *accountpoolmetrics.AccountPoolMetrics
	if rf, ok := ret.Get(0).(func(string, *accountpoolmetrics.AccountPoolMetrics) *accountpoolmetrics.AccountPoolMetrics); ok {
		r0 = rf(ID, data)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*accountpoolmetrics.AccountPoolMetrics)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, *accountpoolmetrics.AccountPoolMetrics) error); ok {
		r1 = rf(ID, data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
